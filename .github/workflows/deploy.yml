name: Deploy Dashboard

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 * * * *'  # This schedule runs the job every hour

env:
  KUBECONFIG: /home/runner/.kube/config

jobs:
  check_updates:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Minikube
      uses: manusa/actions-setup-minikube@v2.4.0
      with:
        minikube version: 'v1.26.0'
        kubernetes version: 'v1.24.0'
        start cluster: true
        install kubectl: true

    - name: Create Job from CronJob to Check for Updates
      run: kubectl create job --from=cronjob/dataops-preprocess manual-preprocess-job

  fetch_data:
    runs-on: ubuntu-latest
    needs: check_updates
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Fetch Data from Kaggle
      run: python download_data.py
      env:
        KAGGLE_USERNAME: ${{ secrets.KAGGLE_USERNAME }}
        KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}

  process_data:
    runs-on: ubuntu-latest
    needs: fetch_data
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Data Processing & Cleanup
      run: python preprocess_data.py

  build_image:
    runs-on: ubuntu-latest
    needs: process_data
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Build Docker Image
      run: docker build -t <your-dockerhub-username>/online-sales-dashboard:latest .

    - name: Push Docker Image
      run: docker push <your-dockerhub-username>/online-sales-dashboard:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_image
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Minikube
      uses: manusa/actions-setup-minikube@v2.4.0
      with:
        minikube version: 'v1.26.0'
        kubernetes version: 'v1.24.0'
        start cluster: true
        install kubectl: true

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml
        kubectl apply -f cronjob.yaml

    - name: Verify Deployment
      run: kubectl get pods
